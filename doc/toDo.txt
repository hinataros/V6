smiyahara:

eigenのパス

choreonoidとの時間の同期

dtの同期

choreonoidとの初期姿勢の同期

pathはどこかのヘッダで一括でまとめたい

コーディングルールのdocを作る

tfとかagとかの定義場所

今のcontrollerのconfigだとgainとかの変わらない奴も更新するから
更新するときとしない時で読み込むかどうかを決めるようにしたい

controllerのconfigのyamlをゲインとdesiredと高速数で分けるか。
その際、変えたいフェイズだけyamlの指定のnodeを読むようにしたい。

outputのgifの分岐もっとうまくやる方法あるでしょ

commonを継承でなくhppだけにするのもあり

limb[0].node[0].vの計算場所

loadしたyamlは何かとかをsim中に出力

コマンドライン引数

yamlディレクトリの名前

rlsSimulatorのデストラクタでdeactivateすべき

controller内ではxを使わずに計算したい
それによってforward kinematicsが簡単にかけるかも...

tauの別端末表示

setupModuleの/usr/localへの移動
ディレクトリ変えてもlnkで行けるようにする

outputのlistをyamlで変更したい
if文で分岐とかでもいい

yamlで先端部の指令値の慣性か接触座標系かを選択

終了時間はmodel以外で定義したい

simulation時間はworkのみで設定するようにする

outputのdataへのpathを一箇所で定義したい

model:controllerにしたい

CMakeList.txtのinclude pathの設定をしやすく

atexはdog入れてなくても単発ならできるようにしとく

cnoidの初期角度をDEGから計算およびBASEをその角度からの足の位置としたい

列挙型　x:1 y:2 z:3 phi:1 th:2 psi:3 cop計算のとことか

controller内のmodelの参照について->できるだけなくすか、状態系統はmodelで統一するか

avconvのinstall shell

mkepsの作成

gain size読んで行列かスカラーか決定

gain のtexを吐き出す

texのxlabel ylabelを自動調節しないように

modelが複数の都合上、t0とかがあるinfoが別のとこでreadModelしたほうがいいかも

modelを一つにして継承、ではなくそれぞれインスタンス化したほうがいいかも
modelの中でtreeとrigidをインスタンス化できたらいいけど

たまたま、model間で同じ名前なかったけどcontrollerでスコープはつけたほうがいい

configのmodel.nameはtreeModel.name

world modelは別にするかめっちゃ迷う

controllerがtfを超えた場合の処理

shared memoryのif分岐が醜い

cnoidの時間変えるshellをつくる

lnkなくしたほうがいいかも

readWorkで書いてある要素だけ上書き？ー＞readするときに初期化するかしないか。
（注）上から順にしか読まない。

infoのvalueとかnode、dofの検討

workのnameのdefaultnameの設定
